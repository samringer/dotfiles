[user]
  name = Sam Ringer
  email = samr@speechmatics.com

[core]
  editor = vim
  whitespace = fix,trailing-space,space-before-tab,cr-at-eol

[branch]
  autosetuprebase = always

[merge]
  tool = meld
[mergetool]
  prompt = false
[mergetool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args --auto-merge \"$PWD/$LOCAL\" \"$PWD/$BASE\" \"$PWD/$REMOTE\" --output=\"$PWD/$MERGED\"

[diff "bin"]
  textconv = hexdump -v -C

[push]
  default = simple
  followTags = true

[apply]
  whitespace = fix

[help]
  autocorrect = 10

[color]
  ui = always

#[color "diff"]
#  meta = yellow bold
#  commit = green bold
#  frag = magenta bold
#  old = red bold
#  new = green bold
#  whitespace = red reverse

#[color "diff-highlight"]
#  oldNormal = "red bold"
#  oldHighlight = "red bold 52"
#  newNormal = "green bold"
#  newHighlight = "green bold 22"

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "status"]
  added = green bold
  changed = yellow bold
  untracked = cyan

[alias]
  gs = status
  br = branch -av
  co = checkout
  cob = checkout -b
  ci = commit
  s = status
  diff = diff --word-diff
  ec = config --global -e
  staged = diff --cached
  who = "!git --no-pager shortlog -s --"
  filelog = log -u

  lsr = remote -v
  lsb = branch -v
  ls = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  la = "!git config -l | grep alias | cut -c 7-"
  lg = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

  publish = git push --set-upstream origin $(git rev-parse â€” abbrev-ref HEAD)

  cm = !git add -A && git commit -m
  up = !git fetch && git rebase origin/master
  mnff = "!git merge --no-ff"
  undo = reset HEAD~1 --mixed
  amend = commit -a --amend
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  bclean = "!f() { command git branch --merged ${1-master} --no-color | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  done = !git up && git co master  && git mnff @{-1} && git bclean && git push
  cleanup = !git wipe && git bclean && git remote prune origin && git gc --aggressive --prune=now && git stash clear
  compress = !git gc --aggressive --prune=now
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  pl = !sh -c 'git pull --rebase --prune && git --no-pager ld HEAD@{1}.. && echo && git submodule update --init --recursive'
  squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
  this = !git init && git add . && git commmit -m \"Initial commit.\"
	gui = !sh -c /usr/local/git/libexec/git-core/git-gui
	gui = !sh -c /usr/local/opt/git/libexec/git-core/git-gui

[url "https://github.com/"]
  insteadOf = gh:

[url "https://gist.github.com/"]
  insteadOf = gist:

[url "https://bitbucket.org/"]
  insteadOf = bb:
[filter "lfs"]
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
